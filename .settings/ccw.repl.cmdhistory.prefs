cmdhistory=["(quotation-portal.repl/start-server)" "(quotation-portal.repl/start-server 8181)" "(quotation-portal.repl/start-server 8888)" "(quotation-portal.repl/start-server \\"8888\\")" "(use 'quotation-portal.repl)" "(start-server 8181)" "(start-server \\"8181\\")" "(use 'quotation-portal.core)" "(use 'guotation-portal.repl)" "(use 'quotation-portal.repl)" "(start-server \\"8383\\")" "(use 'quotation-portal.repl)" "(start-server \\"8383\\")" "(use 'quotation-frontend.calc/calc)" "(use 'quotation-frontend.calc)" "(use 'quotation-frontend/calc)" "(ns quotation-portal.calc/calc)" "(use 'quotation-portal.calc/calc)" "(use 'quotation-portal.repl)" "(start-server \\"8383\\")" "(use 'quotation-portal.calc)" "(use 'quotation-portal.calc/calc)" "(ns quotation-portal.calc)" "(ns quotation-portal.calc/calc)" "(use 'quotation-portal.repl)" "(start-server \\"8383\\")" "(use 'quotation-portal.calc.calc)" "(gross-premium \\"death\\" 20 10 3 4 100000 0.003 0.02 0.002)" "(gross-premium \\"death\\" 20 10 3 1 100000 0.003 0.02 0.002)" "(gross-premium \\"saving\\" 20 10 3 1 100000 0.003 0.02 0.002)" "(gross-premium \\"endownment\\" 20 10 3 1 100000 0.003 0.02 0.002)" "(ns 'quotation-portal.calc.const)" "(ns quotation-portal.calc.const)" "(t/in-years (t/interval (t/date-time 1988 12 11) (l/local-now)))" "(f/show-formatters)" "(f/parse (f/formatter \:date) \\"2014-03-18\\")" "(f/parse (f/formatters \:date) \\"2014-03-18\\")" "(get-date \\"2014-03-18\\")" "(get-years \\"2014-03-18\\" \\"1989-08-04\\")" "(get-years \\"1989-08-04\\" \\"2014-03-18\\")" "(quotation-portal.calc.calc/dummy-premium)" "(use 'quotation-portal.calc.util)" "(get-age \\"1989-04-08\\")" "(use 'quotation-portal.repl)" "(start-server \\"8765\\")" "(use 'quotation-portal.calc.util)" "(get-date \\"08-04-1989\\")" "(get-years \\"08-04-1989\\" \\"18-03-2014\\")" "(use 'quotation-portal.repl)" "(start-server \\"9876\\")" "(quotation-portal.calc.calc/read-qx \\"q.xlsx\\" \\"Sheet1\\" \\"male\\")" "(use 'quotation-portal.repl)" "(start-server \\"8765\\")" "(use 'quotation-portal.repl)" "(start-server \\"8765\\")" "(use 'quotation-portal.repl)" "(start-server 1234)" "(start-server \\"1234\\")" "(use 'quotation-portal.repl)" "(start-server 1234)" "(start-server \\"1234\\")" "(quotation-portal.routes.params/get-alpha)" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(use 'quotation-portal.repl)" "(start-server 1234)" "(start-server \\"1234\\")" "(def alpha (atom 0.03))" "alpha" "@alpha" "(swap\! alpha 0.02)" "(reset\! alpha 0.02)" "(use quotation-portal.routes.params)" "(use 'quotation-portal.routes.params)" "@interest-rate" "(with-precision 10)" "(with-precision 1 0.12345)" "(with-precision 1 (* 1 0.12345))" "(with-precision 1 (* 1M 0.12345))" "(with-precision 1 (* 2M 0.12345))" "(format \\"%.2f\\" 0.12345)" "(use quotation-portal.calc.calc)" "(use 'quotation-portal.calc.calc)" "(gross-premium2 \\"e\\" 1 2 3 4 5 \\"male\\")" "(use 'quotation-portal.calc.calc)" "(gross-premium-interface \\"saving\\" 20 10 5 4 100000 \\"male\\")" "(gross-premium-interface \\"saving\\" 20 10 5 12 100000 \\"male\\")" "(gross-premium-interface \\"saving\\" 20 10 5 12 100000 \\"female\\")" "(use 'quotation-portal.repl)" "(ns quotation-portal.repl)" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(use 'quotation-portal.model.db)" "(create-policy-table)" "(use 'quotation-portal.model.db)" "(read-policies)" "(use 'quotation-portal.model.db)" "(save-policy \\"Igor\\" \\"death\\" 150 10000)" "(save-policy \\"Igor\\" \\"survival\\" 150 10000)" "(read-policies)" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(use 'quotation-portal.calc.calc)" "(gross-premium-interface \\"survival\\" 23 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"death\\" 23 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"endownment\\" 23 10 3 4 100000 \\"male\\")" "(use 'quotation-portal.repl)" "(use 'quotation-portal.calc.calc)" "(use 'clojure.contrib.trace)" "(require 'clojure.tools.trace)" "(use 'clojure.contrib.trace)" "(def qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" gender)))" "(def qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" \\"male\\")))" "qx" "(def Mx (calc-Mx2 qx))" "Mx" "(calc-Mx2 qx)" "(calc-px qx)" "(calc-lx (calc-px qx) 100000)" "(def lx (calc-lx (calc-px qx) 100000))" "(calc-Dx lx (calc-v 0.05))" "(gross-premium-interface \\"endownment\\" 23 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"survival\\" 23 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"death\\" 23 10 3 4 100000 \\"male\\")" "(let [qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" \\"male\\"))\\r\\n        Mx (calc-Mx2 qx)\\r\\n        Dx (calc-Dx2 qx)\\r\\n        annuity-factor (annuity-factor (calc-Nx Dx) Dx x t)]\\r\\n          (net-single-premium\\r\\n            (nAx Mx Dx x n)\\r\\n            (nEx Dx x n)\\r\\n            insurance\\r\\n            sum-insured)\\r\\n          annuity-factor\\r\\n          sum-insured)\\r\\n        (adj-annuity-factor annuity-factor j)" "(def x 23)" "(def j 3)" "(let [qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" \\"male\\"))\\r\\n        Mx (calc-Mx2 qx)\\r\\n        Dx (calc-Dx2 qx)\\r\\n        annuity-factor (annuity-factor (calc-Nx Dx) Dx x t)]\\r\\n          (net-single-premium\\r\\n            (nAx Mx Dx x n)\\r\\n            (nEx Dx x n)\\r\\n            insurance\\r\\n            sum-insured)\\r\\n          annuity-factor\\r\\n          sum-insured)\\r\\n        (adj-annuity-factor annuity-factor j)" "(def t 5)" "(let [qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" \\"male\\"))\\r\\n        Mx (calc-Mx2 qx)\\r\\n        Dx (calc-Dx2 qx)\\r\\n        annuity-factor (annuity-factor (calc-Nx Dx) Dx x t)]\\r\\n          (net-single-premium\\r\\n            (nAx Mx Dx x n)\\r\\n            (nEx Dx x n)\\r\\n            insurance\\r\\n            sum-insured)\\r\\n          annuity-factor\\r\\n          sum-insured)\\r\\n        (adj-annuity-factor annuity-factor j)" "(def n 10)" "(let [qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" \\"male\\"))\\r\\n        Mx (calc-Mx2 qx)\\r\\n        Dx (calc-Dx2 qx)\\r\\n        annuity-factor (annuity-factor (calc-Nx Dx) Dx x t)]\\r\\n          (net-single-premium\\r\\n            (nAx Mx Dx x n)\\r\\n            (nEx Dx x n)\\r\\n            insurance\\r\\n            sum-insured)\\r\\n          annuity-factor\\r\\n          sum-insured)\\r\\n        (adj-annuity-factor annuity-factor j)" "(let [qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" \\"male\\"))\\r\\n        Mx (calc-Mx2 qx)\\r\\n        Dx (calc-Dx2 qx)\\r\\n        annuity-factor (annuity-factor (calc-Nx Dx) Dx x t)]\\r\\n          (net-single-premium\\r\\n            (nAx Mx Dx x n)\\r\\n            (nEx Dx x n)\\r\\n            \\"survival\\"\\r\\n            sum-insured)\\r\\n          annuity-factor\\r\\n          sum-insured)\\r\\n        (adj-annuity-factor annuity-factor j)" "(calc-Dx lx (calc-v 0.05))" "(calc-Cx (calc-d-lc-x lx) x)" "qx" "(def qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" gender)))" "(def qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" \\"male\\")))" "(use 'quotation-portal.calc)" "(use 'quotation-portal.calc.calc)" "(def qx (get-qx (read-qx \\"mort-tables/q.xlsx\\" \\"Sheet1\\" \\"male\\")))" "qx" "(def Mx (calc-Mx2 qx))" "(def Dx (calc-Dx2 qx))" "(def annuity-factor (annuity-factor (calc-Nx Dx) Dx x t))" "(def nAx (nAx Mx Dx x n))" "(net-single-premium\\r\\n            (nAx Mx Dx 23 10)\\r\\n            (nEx Dx 23 10)\\r\\n            \\"death\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nAx Mx Dx 22 10)\\r\\n            (nEx Dx 22 10)\\r\\n            \\"death\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nAx Mx Dx 22 10)\\r\\n            (nEx Dx 22 10)\\r\\n            \\"endownment\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nAx Mx Dx 22 10)\\r\\n            (nEx Dx 22 10)\\r\\n            \\"survival\\"\\r\\n            100000)" "(gross-premium-interface \\"endownment\\" 23 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"survival\\" 23 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"death\\" 23 10 3 4 100000 \\"male\\")" "(net-single-premium\\r\\n            (nEx Dx 22 10)\\r\\n            (nAx Mx Dx 22 10)\\r\\n            \\"survival\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nEx Dx 22 10)\\r\\n            (nAx Mx Dx 22 10)\\r\\n            \\"death\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nEx Dx 22 10)\\r\\n            (nAx Mx Dx 22 10)\\r\\n            \\"endownment\\"\\r\\n            100000)" "(nAx Mx Dx 22 10)" "(nAx Mx Dx 20 10)" "(nEx Dx 20 10)" "(net-single-premium\\r\\n            (nEx Dx 22 10)\\r\\n            (nAx Mx Dx 22 10)\\r\\n            \\"endownment\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nEx Dx 20 10)\\r\\n            (nAx Mx Dx 20 10)\\r\\n            \\"endownment\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nEx Dx 20 10)\\r\\n            (nAx Mx Dx 20 10)\\r\\n            \\"saving\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nEx Dx 20 10)\\r\\n            (nAx Mx Dx 20 10)\\r\\n            \\"death\\"\\r\\n            100000)" "(net-single-premium\\r\\n            (nEx Dx 20 10)\\r\\n            (nAx Mx Dx 20 10)\\r\\n            \\"survival\\"\\r\\n            100000)" "(gross-premium-interface \\"survival\\" 20 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"death\\" 20 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"endownment\\" 20 10 3 4 100000 \\"male\\")" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(gross-premium-interface \\"endownment\\" 20 10 3 4 100000 \\"male\\")" "(gross-premium-interface \\"survival\\" 25 10 3 4 100000 \\"male\\")" "(use 'quotation-portal.routes.policymgmt)" "(get-action \\"submitted\\")" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(use 'quotation-portal.model.db)" "(read-policies)" "(vector \\"1\\")" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(use 'quotation-portal.model.db)" "(set-status \\"TEST\\" 1)" "(use 'quotation-portal.routes.policymgmt)" "(get status-action-chain \\"Submitted\\")" "(find action-status \:submit)" "(ns quotation-portal.policymgmt)" "(ns quotation-portal.routes.policymgmt)" "(find action-status \:submit)" "(val (find action-status \:submit))" "(get-outcome-status \:submit)" "(get-outcome-status \\"submit\\")" "(get-outcome-status action)" "(get-outcome-status \\"approve\\")" "(get-outcome-status (keyword \\"approve\\"))" "(get-outcome-status \\"approve\\")" "(get-action \\"Submitted\\")" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(use 'quotation-portal.routes.policymgmt)" "(get-action \\"Submitted\\")" "(val (find status-action (keyword (clojure.string/lower-case status))))" "(val (find status-action (keyword (clojure.string/lower-case \\"Submitted\\"))))" "(use 'quotation-portal.repl)" "(start-server \\"1234\\")" "(ns quotation-portal.routes.util)" "(nth pay-freq 1)" "(nth (pay-freq) 1)" "(for [x (pay-freq)\\n      \:when (\= (nth x 1) \\"1\\")]\\n  (nth x 0))" "(get-pay-freq 1)" "(val (get-pay-freq 1))" "(first (get-pay-freq 1))" "(get-pay-freq 1)"]
eclipse.preferences.version=1
